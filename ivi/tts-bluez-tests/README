-----------------------
 Introduction
-----------------------
This suite is to test Bluez stack.
# Usage for each file (under tts-bluez-tests folder):
<sub-folder>   <usage>
src            source file of the cases
data/client    shared scripts and data on the client side for testing
data/server    entire folder should be copied to server machine.
               Run server_startup.sh on the server to set up
               a daemon to communicate with Client.

# Needed package/command
pygobject --- python binding for gobject used by pairing script
              data/client/auto_accept_agent
md5sum    --- to check the file consistence after FTP transfering.
bridge-utils --- add a network bridge for PAN server setting. (This is only for Server part)
When PANU case is running, server should install bridge-utils to create a network bridge as PAN server.

-----------------------
Install and Run
-----------------------
 (if you don't have testkit-lite, you can get it from https://github.com/testkit/testkit-lite)
Steps:
precondition: We need to use two machine, one is server and another is your testing machine as client. 
   Setup Server environment by three steps as "Test Environment" describe (Please see next section)
   Then, rest steps are on testing machine; bluez-test package is needed on testing machine.
Build case:

1. rpm -ivh tts-bluez-tests-0.1.0-1.i386.rpm    --- install RPM to your testing machine 

To run cases, you can either do step.2 or step.3
2. cd /usr/share/tests/ivi-connectivity-tests/tts-bluez-tests and run any sh file by root account.
3. testkit-lite -f /usr/share/tests/ivi-connectivity-tests/tts-bluez-tests/tests.xml --comm localhost -o ./results.xml



-----------------------
Test Environment
-----------------------
1. Setup Server daemon (recommend to use ubuntu-12.04 system)
  copy tts-bluez-tests/data/server folder to server machine to /home/USER, run ./bt_pan_server_setup.sh as root to enable PAN server, then run ./server_startup.sh as normal user to enable agent for pairing and OBEX server.

2. Do confirm your client machine has no old pairing with the server machine, or it will 
  affect most of the cases.

3. [On client] install bluez-test package on client, config the environment file: data/client/bluetooth_env:
DATA_DIR     --- the place for all cases where RPM install. E.g. /opt/tts-bluez-tests/
AUTO_AGENT   --- the place for agent which used for pairing
SERV_BD_ADDR --- Server bluetooth MAC address, e.g. "00:0A:94:03:ED:81"

4. Do run those cases in 'root' user please or use "sudo xxx.sh" in normal user. 

-----------------------
Known Issues
-----------------------
For server setup, do please use ubuntu-12.04 system, because:
* Fedora does not contain OBEX.
* Ubuntu11 has some problem, which could cause BT not stable. (to experience, not go further to debug)
Do please use "su -" to switch to root account for validation. 
Note: you can report the defects of this test suite to jingke.zhang@intel.com

-----------------------
TODO
-----------------------
