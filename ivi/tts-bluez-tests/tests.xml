<?xml version="1.0" encoding="UTF-8"?>
<suite name="tts-bluez-tests">
  <set name="device_control">
    <testcase purpose="check bluetoothd daemon running in system" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P0" id="bt_system_daemon_bluetoothd">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>ps -ef | grep bluetoothd
check if system runs bluetoothd daemon in beginning of booting up.</step_desc>
            <expected>when system boots up, it should run bluetoothd daemon.</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_system_daemon_bluetoothd.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="get local adapter name value" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P0" id="bt_adapter_get_name">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/lib/bluez/test/test-adapter hci0 name</step_desc>
            <expected>it should get BT device name</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_adapter_get_name.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="check obexd package integration" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P0" id="bt_system_package_obexd">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>rpm -qv obexd
Check if obexd rpm package is installed</step_desc>
            <expected>system should install obexd package</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_system_package_obexd.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="get local adapter BT MAC address information" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P1" id="bt_adapter_get_address">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>1, Run command "hciconfig -a" to display all device information. (In auto case, it will call DBus API to get the name property of the adapter)
2. Find BT MAC address from the output of the command.</step_desc>
            <expected>1. Bluetooth MAC address should be output in pattern, for example, 00:22:69:FB:AA:8A</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_adapter_get_address.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="set local adapter power and check value" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P1" id="bt_adapter_set_power">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>1. Call DBus API: SetProperty("Powered", &lt;On or Off&gt;) to power on/off the bluetooth adapter.
2. Call DBus API: GetProperties() to get the value of "Powered" property. 1 stands for On, and 0 stands for Off.</step_desc>
            <expected>1. The property value got from DBus call should be same with the value we set.</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_adapter_set_power.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="check bluez package integration" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P0" id="bt_system_package_bluez">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>rpm -qv bluez
Check if the bluez rpm package is installed</step_desc>
            <expected>System should install bluez package.</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_system_package_bluez.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="stressfully set power On/Off for 50 times" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="bt_adapter_set_stress_power_50times">
      <description>
        <notes />
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>1. Call DBus API: SetProperty("Powered", &lt;boolean value for On/Off&gt;) to power on and power off the adapter for 50 times.
2. Check if the bluetooth device can be powered correctly during the stress process.</step_desc>
            <expected>1. For each execution during the 50 times, adapter power should be correctly On and Off.</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_adapter_set_stress_power_50times.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="set local adapter discoverabletimout and check value" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="bt_adapter_set_discoverabletimeout">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/lib/bluez/test/test-adapter hci0 discoverabletimeout 1</step_desc>
            <expected>the hci0 discoverabletimeout could be set to 1</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_adapter_set_discoverabletimeout.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="set local adapter pairable to Off and check value" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P1" id="bt_adapter_set_pairable_off">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/lib/bluez/test/test-adapter hci0 pairable 0</step_desc>
            <expected>hci0 pairable could be set to 0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_adapter_set_pairable_off.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="set local adapter pairable to On and check value" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P0" id="bt_adapter_set_pairable_on">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/lib/bluez/test/test-adapter hci0 pairable 0</step_desc>
            <expected>hci0 pairable should be set to 0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_adapter_set_pairable_on.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="get local adapter discoverabletimout status value" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="bt_adapter_get_discoverabletimeout">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/lib/bluez/test/test-adapter hci0 discoverabletimeout</step_desc>
            <expected>it should present discoverabletimeout info.</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_adapter_get_discoverabletimeout.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="get local adapter power status value" type="functional_positive" status="ready" requirement_ref="bluetooth" component="Networking/Bluetooth" execution_type="auto" priority="P1" id="bt_adapter_get_power">
      <description>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/lib/bluez/test/test-adapter hci0 power</step_desc>
            <expected>it should get hci0 power status</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_adapter_get_power.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    </set>
  <set name="bluez_command">
     <testcase purpose="hci command to set iscan mode" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="hci_set_iscan">
      <description>
        <notes>hci command to set iscan mode</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_set_iscan.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_set_iscan.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="hci command to set adapter name" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="hci_set_name">
      <description>
        <notes>hci command to set adapter name</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_set_name.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_set_name.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="hci command to check adapter name" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="bt_hci_name">
      <description>
        <notes>hci command to check adapter name</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_hci_name.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_hci_name.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="hci command to set piscan mode" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="hci_set_piscan">
      <description>
        <notes>hci command to set piscan mode</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_set_piscan.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_set_piscan.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="hci command to check device informaton" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="bt_hci_dev">
      <description>
        <notes>hci command to check device informaton</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_hci_dev.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_hci_dev.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="hci command to get adapter name" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="hci_get_name">
      <description>
        <notes>hci command to get adapter name</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_get_name.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_get_name.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="hcitool command to scan nearby bluetooth devices" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="hci_tool_scan">
      <description>
        <notes>hcitool command to scan nearby bluetooth devices</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_tool_scan.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/hci_tool_scan.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="pair IVI with other BT devices" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P1" id="bt_gap_pairing_computer">
      <description>
        <notes>hci command to get adapter name</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_gap_pairing_computer.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_gap_pairing_computer.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose=" Check l2cap socket communication using l2ping" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="bt_l2cap_ping_check">
      <description>
        <notes>hci command to get adapter name</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_l2cap_ping_check.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_l2cap_ping_check.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
    <testcase purpose="The paired BT device could be remove successfully" type="functional_positive" status="ready" component="Networking/Bluetooth" execution_type="auto" priority="P2" id="bt_l2cap_ping_check">
      <description>
        <notes>hci command to get adapter name</notes>
        <pre_condition />
        <post_condition />
        <steps>
          <step order="1">
            <step_desc>/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_gap_remove_pairing_computer.sh</step_desc>
            <expected>0</expected>
          </step>
        </steps>
        <test_script_entry test_script_expected_result="0">/usr/share/tests/common-connectivity-suite/tts-bluez-tests/bt_gap_remove_pairing_computer.sh</test_script_entry>
      </description>
      <categories>
        <category>IVI</category>
      </categories>
    </testcase>
  </set>
</suite>

